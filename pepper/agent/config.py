"""Pepper Manager configuration"""

import glob
import secrets

import yaml

DEFAULT_CONFIG_FILE = "/etc/pepper/agent.yml"
MACHINE_ID_FILE = "/etc/pepper/machine_id"

defaults = {
    "manager_host": "localhost",
    "manager_port": 7051,
    "machine_id": None,
    "hello_timeout": 3,
    "ping_interval": 30,
    "ping_timeout": 5,
    "include": ["/etc/pepper/agent.d/*.yml"],
    "data_request_timeout": 5,
}


def load_agent_config(config_file=None, machine_id_file=None):
    if config_file is None:
        config_file = DEFAULT_CONFIG_FILE
    try:
        with open(config_file, "r") as stream:
            yml = yaml.safe_load(stream)
    except FileNotFoundError:
        yml = {}
    conf = defaults.copy()
    conf.update(yml)
    process_includes(conf, [config_file])
    if machine_id_file is None:
        machine_id_file = MACHINE_ID_FILE
    try:
        with open(machine_id_file, "r") as mf:
            machine_id = mf.read().strip()
    except FileNotFoundError:
        pass
    else:
        conf["machine_id"] = machine_id
    if not conf["machine_id"]:
        conf["machine_id"] = "autogenerated " + secrets.token_hex(8)
    return conf


def process_includes(conf, included_files):
    if "include" not in conf:
        return
    for pattern in conf["include"]:
        for filename in glob.glob(pattern):
            if filename in included_files:
                continue
            included_files.append(filename)
            with open(filename, "r") as stream:
                included_yml = yaml.safe_load(stream)
            conf.update(included_yml)
            process_includes(included_yml, included_files)
